@model PagedList.IPagedList<M17E_Caderneta.Models.Turma>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}

<h2 class="mt-5">Turmas</h2>

<div class="border shadow p-3">
    <div class="mb-3 d-flex justify-content-between">
        <div class="dropdown">
            <a class="btn btn-outline-dark dropdown-toggle" href="#" role="button" id="dropdownFiltros" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Ordenação
            </a>

            <ul class="dropdown-menu" aria-labelledby="dropdownFiltros">
                <li> <a class="dropdown-item" href="@Url.Action("Index",new { sortOrder = "name_asc",currentFilter=ViewBag.CurrentFilter})">Nome [a-z]</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Index",new { sortOrder = "name_desc",currentFilter=ViewBag.CurrentFilter})">Nome [z-a]</a></li>
            </ul>
        </div>
        @if (User.Identity.IsAuthenticated && User.IsInRole("Administrador"))
        {
            <div>
                @Html.ActionLink("Criar nova Turma", "Create", new { }, new { @class = "btn btn-success" })
            </div>
        }
        @using (Html.BeginForm("Index", "Turmas", FormMethod.Get))
        {
            <div class="d-flex ">

                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Procurar por nome", @type = "search" })
                <input type="submit" value="Procurar" class="ml-3 btn btn-sm btn-outline-dark" />
            </div>
        }
    </div>
    <table class="table">
        <thead class="table-dark">
            <tr>
                <th>
                    Nome
                </th>

                <th>
                    Ano
                </th>
                <th>
                    Letra
                </th>
                <th>
                    Ano Letivo
                </th>
                @if (User.IsInRole("Administrador"))
                {
                    <th>Opções</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {

                <tr>
                    <td>
                        <a href="@Url.Action("ConsultaNotas","Turmas",new { id = item.id })">@Html.DisplayFor(modelItem => item.Nome) </a>
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Ano)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Letra)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AnoLetivo)
                    </td>
                    @if (User.IsInRole("Administrador"))
                    {
                        <td>
                            <a href="@Url.Action("Edit",new { id = item.id })" class="mr-3" data-toggle="tooltip" data-placement="top" title="Editar"><i class="far fa-edit"></i></a>
                            <a href="@Url.Action("Details",new { id = item.id })" class="mr-3" data-toggle="tooltip" data-placement="top" title="Detalhes"><i class="far fa-info-square text-warning"></i></a>
                            <a href="@Url.Action("Delete",new { id = item.id })" data-toggle="tooltip" data-placement="top" title="Eliminar"><i class="far fa-trash-alt text-danger"></i></a>
                        </td>
                    }

                </tr>
            }
        </tbody>
    </table>
    <br />
    Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>